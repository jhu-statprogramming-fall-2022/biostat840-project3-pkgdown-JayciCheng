[{"path":"/articles/Example analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example analysis","text":"example analysis, explore universities different states US, analysis annual tuition fees total expense university students. original data used come Chronicle Higher Education. contains published tuition required fees 3,400 colleges universities 2020-21 academic year. data dictionary can found College tuition, diversity, pay, use tuition_cost.csv . First, import packages needed.","code":"library(top3) library(here) library(readr) library(ggplot2) library(tidyverse) library(dplyr) library(stringr) library(forcats) library(purrr)"},{"path":"/articles/Example analysis.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Example analysis","text":"Test directory named data exists locally save data set. clean data, select needed attributes.","code":"# tests if a directory named \"data\" exists locally if(!dir.exists(here(\"data\"))) { dir.create(here(\"data\")) }  if(!file.exists(here(\"data\",\"tuition_cost\"))){   tuition_cost <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv\")      # save the files to RDS objects   save(tuition_cost, file = here(\"data\",\"tuition_cost\")) } ## Rows: 2973 Columns: 10 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (5): name, state, state_code, type, degree_length ## dbl (5): room_and_board, in_state_tuition, in_state_total, out_of_state_tuit... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. data <- select(tuition_cost, name, state, type, degree_length, room_and_board,                         out_of_state_tuition, out_of_state_total) data <- filter(data, !is.na(state)) data <- arrange(data, desc(out_of_state_total)) data <- rename(data, tuition = out_of_state_tuition, total_expense = out_of_state_total)  head(data) ## # A tibble: 6 × 7 ##   name                               state type  degre…¹ room_…² tuition total…³ ##   <chr>                              <chr> <chr> <chr>     <dbl>   <dbl>   <dbl> ## 1 Harvey Mudd College                Cali… Priv… 4 Year    18127   56876   75003 ## 2 University of Chicago              Illi… Priv… 4 Year    16350   58230   74580 ## 3 Columbia University                New … Priv… 4 Year    14016   59985   74001 ## 4 Barnard College                    New … Priv… 4 Year    17225   55032   72257 ## 5 Scripps College                    Cali… Priv… 4 Year    16932   55024   71956 ## 6 Columbia University: School of Ge… New … Priv… 4 Year    14190   57549   71739 ## # … with abbreviated variable names ¹​degree_length, ²​room_and_board, ## #   ³​total_expense"},{"path":"/articles/Example analysis.html","id":"data-analysis","dir":"Articles","previous_headings":"","what":"Data Analysis","title":"Example analysis","text":"look top three states fewest universities. California, New York Pennsylvania number universities, whereas Alaska, Delaware Wyoming least number universities. find average cost university students, calculate mean value tuition fees total expense. average tuition fees $20,711.52 per year, average total expense $27,147.51 per year. expense private universities highest, whereas expense public universities lowest. draw histogram annual total expense university students.  can conclude histogram distribution annual total expense right skewed. students spend $30,000 per year. group students state study, look annual total expense well tuition fees.  see annual expense Rhode Island, Vermont Massachusetts highest, annual expense New Mexico, Wyoming Arkansas lowest. Generally speaking, higher tuition fees, much students spend total.","code":"num_of_uni_summary <- data %>%   group_by(state) %>%   summarise(     n = n()   ) maxi <- top3_high(num_of_uni_summary$n) maxi_states <- num_of_uni_summary[which(num_of_uni_summary$n %in% maxi),] maxi_states ## # A tibble: 3 × 2 ##   state            n ##   <chr>        <int> ## 1 California     254 ## 2 New York       221 ## 3 Pennsylvania   160 mini <- top3_low(num_of_uni_summary$n) mini_states <- num_of_uni_summary[which(num_of_uni_summary$n %in% mini),] mini_states ## # A tibble: 3 × 2 ##   state        n ##   <chr>    <int> ## 1 Alaska       6 ## 2 Delaware     9 ## 3 Wyoming      8 map(.x = data[,c(\"tuition\",\"total_expense\")], .f = mean) ## $tuition ## [1] 20711.52 ##  ## $total_expense ## [1] 27147.51 # Create a data set for school type level uni_type <- data |> split(data$type) uni_type |> map_dbl(.f = ~mean(.x$tuition)) # returns a vector of doubles ## For Profit      Other    Private     Public  ##   16865.43   14640.00   29801.81   13708.59 uni_type |> map_dbl(.f = ~mean(.x$total_expense)) ## For Profit      Other    Private     Public  ##   19007.94   14640.00   39166.38   18090.17 ggplot(data, aes(x = total_expense)) +    geom_density() +    geom_vline(aes(xintercept=mean(total_expense)),               color=\"blue\", linetype=\"dashed\", size=1) +   xlab(\"annual total expense\")+ylab(\"density\")+   labs(title = \"Distribution of Annual Total Expense of University Students\",               subtitle = \"Adding the Line Representing the Average Annual Total Expense\",               caption = \"Jiaqi Cheng\") +   theme_bw()+   theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5)) expense_summary <- data %>%   group_by(state) %>%   summarise(     tuition = mean(tuition, na.rm = TRUE),     total_expense = mean(total_expense, na.rm = TRUE),     n = n()   )  ggplot(expense_summary, aes(total_expense, fct_reorder(state, total_expense))) +    geom_point(aes(size = tuition)) +    xlab(\"total expense\")+ylab(\"state\")+   labs(title = \"Average Total Expense of Universities in Different States\",               subtitle = \"Also Show the Average Tuition Fees of Universities\",               caption = \"Jiaqi Cheng\") +   theme_bw()+   theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), axis.text = element_text(size = 6))"},{"path":"/articles/Example analysis.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Example analysis","text":"universities US unevenly distributed. California 250 universities, whereas 6 universities located Alaska. Students’ costs Universities varies lot. general, private universities require fees, universities Rhode Island cost .","code":""},{"path":"/articles/Example analysis.html","id":"functions-summary","dir":"Articles","previous_headings":"","what":"Functions Summary","title":"Example analysis","text":"Functions used packages: dplyr: select(), filter(), arrange(), rename(), group_by(), summarise() forcats: fct_reorder() purrr: map(), map_dbl() ggplot2: geom_density(), geom_vline(), geom_point() top3: top3_high(), top3_low()","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jiaqi Cheng. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng J (2022). top3: Find TOP3 Terms List. R package version 0.0.0.9000.","code":"@Manual{,   title = {top3: Find TOP3 Terms in A List},   author = {Jiaqi Cheng},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/reference/top3_high.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate greatest top 3 — top3_high","title":"Calculate greatest top 3 — top3_high","text":"Calculate greatest top 3 numbers given list","code":""},{"path":"/reference/top3_high.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate greatest top 3 — top3_high","text":"","code":"top3_high(arr)"},{"path":"/reference/top3_high.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate greatest top 3 — top3_high","text":"arr target array need find greatest 3 number","code":""},{"path":"/reference/top3_high.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate greatest top 3 — top3_high","text":"high3","code":""},{"path":"/reference/top3_high.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate greatest top 3 — top3_high","text":"function calculates greatest top 3 numbers list bubble sort","code":""},{"path":"/reference/top3_high.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate greatest top 3 — top3_high","text":"","code":"top3_high(1:5) #> [1] 5 4 3"},{"path":"/reference/top3_low.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate smallest top 3 — top3_low","title":"Calculate smallest top 3 — top3_low","text":"Calculate smallest top 3 numbers given list","code":""},{"path":"/reference/top3_low.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate smallest top 3 — top3_low","text":"","code":"top3_low(arr)"},{"path":"/reference/top3_low.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate smallest top 3 — top3_low","text":"arr target array need find smallest 3 number","code":""},{"path":"/reference/top3_low.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate smallest top 3 — top3_low","text":"low3","code":""},{"path":"/reference/top3_low.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate smallest top 3 — top3_low","text":"function calculates smallest top 3 numbers list bubble sort","code":""},{"path":"/reference/top3_low.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate smallest top 3 — top3_low","text":"","code":"top3_low(c(1,3,5,7,9)) #> [1] 1 3 5"}]
